name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
  
jobs:
  build:
    name: Build and Test App
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Run unit tests
      run: mvn clean test
      
    - name: Build with Maven
      run: mvn clean install
    
  push_to_registry:
    name: Push to DockerHub
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Login docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Maven package
        run: mvn clean install

      - name: Docker build
        run: docker build -t tretiqhiks/ci-azure-test:latest .

      - name: Docker push
        run: docker push tretiqhiks/ci-azure-test:latest
        
  deploy_to_staging:
     name: Deploy App to Staging
     runs-on: ubuntu-latest
     needs: push_to_registry
     steps:
      - uses: actions/checkout@v3
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Set Docker Image on Web App
        run: |
          az webapp config container set --name test-ci-svetoslav --resource-group test-ci \
            --container-image-name docker.io/tretiqhiks/ci-azure-test:latest \
            --container-registry-url https://docker.io \
            --container-registry-user ${{ secrets.DOCKERHUB_USERNAME }} \
            --container-registry-password ${{ secrets.DOCKERHUB_PASSWORD }} \
            --slot staging
            
      - name: Health Check Staging
        run: |
            for i in {1..5}; do
              curl -f https://test-ci-svetoslav-staging.azurewebsites.net/test/staging && break || sleep 15
            done     
  slot_swap:
    name: Swap Staging to Production
    needs: deploy_to_staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Swap Slots
        run: |
          az webapp deployment slot swap --name test-ci-svetoslav --resource-group test-ci --slot staging --target-slot production
      
      - name: Health Check Production
        run: |
            for i in {1..5}; do
              curl -f https://test-ci-svetoslav.azurewebsites.net/test/production && break || sleep 10
            done
      - name: Revert Swap if Health Check Fails
        if: failure()
        run: |
          az webapp deployment slot swap --name test-ci-svetoslav --resource-group test-ci --slot production --target-slot staging
